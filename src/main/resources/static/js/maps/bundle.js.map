{"version":3,"names":[],"mappings":"","sources":["bundle.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nvar _map = require(\"./map\");\n\nvar _qrcodeGenerator = _interopRequireDefault(require(\"qrcode-generator\"));\n\nvar _tippy = _interopRequireDefault(require(\"tippy.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// display the leafletMap on the view page where the #map[wkt=*] exists\nvar mapElement = document.getElementById('map');\n\nif (mapElement) {\n  var mapID = 'map';\n  var mapDetailID = 'map-detail';\n  var map = (0, _map.leafletMap)(mapID, mapDetailID);\n\n  if (map === null) {\n    document.getElementById(mapID).classList.add('hidden');\n    document.getElementById(mapDetailID).classList.remove('hidden');\n    document.getElementById('location-heading').classList.remove('hidden');\n  }\n} // display qrcode on the view page where the #qrcode[url=*] exists\n\n\nvar qrcodeElement = document.getElementById('qrcode');\n\nif (qrcodeElement) {\n  var typeNumber = 0;\n  var errorCorrectionLevel = 'L';\n  var qr = (0, _qrcodeGenerator[\"default\"])(typeNumber, errorCorrectionLevel);\n  var url = qrcodeElement.getAttribute('url');\n  qr.addData(url);\n  qr.make();\n  document.getElementById('qrcode').innerHTML = qr.createImgTag(3);\n} // tooltip init\n\n\n(0, _tippy[\"default\"])('[data-tippy-content]');\n(0, _tippy[\"default\"])('.tip-content', {\n  content: function content(reference) {\n    var id = reference.getAttribute('data-template');\n    var template = document.getElementById(id);\n    return template.innerHTML;\n  },\n  allowHTML: true,\n  trigger: 'click',\n  theme: 'light-border',\n  interactive: true\n});\n\nfunction convertDate(date) {\n  var d = new Date(date);\n  var ye = new Intl.DateTimeFormat('en', {\n    year: 'numeric'\n  }).format(d);\n  var mo = new Intl.DateTimeFormat('en', {\n    month: 'short'\n  }).format(d);\n  var da = new Intl.DateTimeFormat('en', {\n    day: '2-digit'\n  }).format(d);\n  return \"\".concat(da, \" \").concat(mo, \" \").concat(ye);\n}\n\n},{\"./map\":2,\"qrcode-generator\":\"qrcode-generator\",\"tippy.js\":\"tippy.js\"}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.leafletMap = exports.getWKTFromString = void 0;\n\nvar _wicket = _interopRequireDefault(require(\"wicket\"));\n\nvar _leaflet = _interopRequireDefault(require(\"leaflet\"));\n\nrequire(\"wicket/wicket-leaflet\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Return a Wkt object\n *\n * @param wktValue\n * @return {Wkt} wicket.Wkt object or null if the value is undiscernable\n */\nvar getWKTFromString = function getWKTFromString(wktValue) {\n  var wkt = new _wicket[\"default\"].Wkt(); // Attempt to catch malformed wkt string\n\n  try {\n    wkt.read(wktValue);\n  } catch (e1) {\n    try {\n      // try sanitization\n      wkt.read(wktValue.replace('\\n', '').replace('\\r', '').replace('\\t', ''));\n    } catch (e2) {\n      if (e2.name === 'WKTError') {\n        console.error('Error parsing WKT', wktValue);\n        return null;\n      }\n    }\n  }\n\n  return wkt;\n};\n/**\n * Display a leaflet map that take in the wkt value from the wkt data attribute\n *\n * @param {string} elemID - The id of the element on the page\n * @return {Map} map - the leaflet map object\n */\n\n\nexports.getWKTFromString = getWKTFromString;\n\nvar leafletMap = function leafletMap(elemID, popUpContentID) {\n  var wktValue = document.getElementById(elemID).getAttribute('wkt');\n  var wkt = getWKTFromString(wktValue);\n\n  if (wkt == null) {\n    console.error('Map displaying failed due to wkt extraction');\n    return null;\n  }\n\n  var map = _leaflet[\"default\"].map(elemID, {\n    scrollWheelZoom: false\n  }).setView({\n    lon: 0,\n    lat: 0\n  }, 2); // add the OpenStreetMap tiles, need to attribute openstreetmap.org\n\n\n  _leaflet[\"default\"].tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n    attribution: '&copy; <a href=\"https://openstreetmap.org/copyright\">OpenStreetMap contributors</a>'\n  }).addTo(map); // show the scale bar on the lower left corner\n\n\n  _leaflet[\"default\"].control.scale().addTo(map); // convert\n\n\n  var obj = wkt.toObject(map.defaults); // Deal with multigeometries\n\n  if (_wicket[\"default\"].isArray(obj)) {\n    obj.forEach(function (i) {\n      if (obj.hasOwnProperty(i) && !_wicket[\"default\"].isArray(obj[i])) {\n        obj[i].bindPopup(document.getElementById(popUpContentID).innerHTML).openPopup();\n        obj[i].addTo(map);\n      }\n    });\n  } else {\n    obj.bindPopup(document.getElementById(popUpContentID).innerHTML).openPopup();\n    obj.addTo(map);\n  } // focus on the obj\n\n\n  if (obj.getBounds !== undefined && typeof obj.getBounds === 'function') {\n    // For objects that have defined bounds or a way to get them, eg, POLYGON\n    map.fitBounds(obj.getBounds());\n  } else if (obj.getLatLng !== undefined && typeof obj.getLatLng === 'function') {\n    // for obj that has a Latlng, primarily eg, POINT\n    map.panTo(obj.getLatLng());\n  } // (optional) return the map\n\n\n  return map;\n};\n\nexports.leafletMap = leafletMap;\n\n},{\"leaflet\":\"leaflet\",\"wicket\":\"wicket\",\"wicket/wicket-leaflet\":\"wicket/wicket-leaflet\"}]},{},[1]);\n"],"file":"../bundle.js"}